<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="ALSD2016-Test">
    <property environment="env"/>
<property name="dir.buildfile" value="."/>
<property name="dir.workspace" value="/Users/R.J.Liu/Documents/Project"/>
<property name="dir.jarfile" value="${dir.buildfile}"/>
    <property name="dist" location="build"/>
    <property name="ECLIPSE_HOME" value="../../../../../Applications/Eclipse.app/Contents/Eclipse/"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}plugins/org.junit_4.12.0.v201504281640/junit.jar"/>
        <pathelement location="${ECLIPSE_HOME}plugins/org.hamcrest.core_1.3.0.v201303031735.jar"/>
    </path>
    <path id="ALSD2016-Test.classpath">
        <pathelement location="bin"/>
        <pathelement location="libs/cucumber-core-1.2.5.jar"/>
        <pathelement location="libs/cucumber-java-1.2.5.jar"/>
        <pathelement location="libs/cucumber-java8-1.2.5.jar"/>
        <pathelement location="libs/cucumber-junit-1.2.5.jar"/>
        <pathelement location="libs/cucumber-jvm-deps-1.0.5.jar"/>
        <pathelement location="libs/cucumber-testng-1.2.5.jar"/>
        <pathelement location="libs/gherkin-2.12.2.jar"/>
        <pathelement location="libs/hamcrest-core-1.3.jar"/>
        <pathelement location="libs/junit-4.12.jar"/>
        <pathelement location="libs/cucumber-html-0.2.3.jar"/>
        <pathelement location="libs/selenium-server-standalone-3.0.1.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="libs/java-json.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="test">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>

	<target depends="dist" name="build"/>
	<target name="dist" depends="build-subprojects,build-project" description="generate the distribution">
			<!-- 創建放置jar檔目錄 -->
			<mkdir dir="${dist}"/>
			<!-- 把build目錄內的所有檔案結構打包成jar檔  -->


		<jar jarfile="${dist}/${ant.project.name}.jar" basedir="bin" filesetmanifest="mergewithoutmain">
		            <manifest>
		            	<attribute name="Main-Class" value="ALSD.CucumberTest.Main"/>
		            	<attribute name="Class-Path" value="."/>
		            </manifest>
<zipfileset excludes="META-INF/*.SF" src="${dir.workspace}/ALSD2016-Test/libs/cucumber-core-1.2.5.jar"/>
<zipfileset excludes="META-INF/*.SF" src="${dir.workspace}/ALSD2016-Test/libs/cucumber-java-1.2.5.jar"/>
<zipfileset excludes="META-INF/*.SF" src="${dir.workspace}/ALSD2016-Test/libs/cucumber-java8-1.2.5.jar"/>
<zipfileset excludes="META-INF/*.SF" src="${dir.workspace}/ALSD2016-Test/libs/cucumber-junit-1.2.5.jar"/>
<zipfileset excludes="META-INF/*.SF" src="${dir.workspace}/ALSD2016-Test/libs/cucumber-jvm-deps-1.0.5.jar"/>
<zipfileset excludes="META-INF/*.SF" src="${dir.workspace}/ALSD2016-Test/libs/cucumber-testng-1.2.5.jar"/>
<zipfileset excludes="META-INF/*.SF" src="${dir.workspace}/ALSD2016-Test/libs/gherkin-2.12.2.jar"/>
<zipfileset excludes="META-INF/*.SF" src="${dir.workspace}/ALSD2016-Test/libs/hamcrest-core-1.3.jar"/>
<zipfileset excludes="META-INF/*.SF" src="${dir.workspace}/ALSD2016-Test/libs/junit-4.12.jar"/>
<zipfileset excludes="META-INF/*.SF" src="${dir.workspace}/ALSD2016-Test/libs/cucumber-html-0.2.3.jar"/>
<zipfileset excludes="META-INF/*.SF" src="${dir.workspace}/ALSD2016-Test/libs/selenium-server-standalone-3.0.1.jar"/>
<zipfileset excludes="META-INF/*.SF" src="/Applications/Eclipse.app/Contents/Eclipse/plugins/org.junit_4.12.0.v201504281640/junit.jar"/>
<zipfileset excludes="META-INF/*.SF" src="/Applications/Eclipse.app/Contents/Eclipse/plugins/org.hamcrest.core_1.3.0.v201303031735.jar"/>
<zipfileset excludes="META-INF/*.SF" src="${dir.workspace}/ALSD2016-Test/libs/java-json.jar"/>
		        </jar>

    </target>

    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="test"/>
            <classpath refid="ALSD2016-Test.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="ALSD2016-Test">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="ALSD.CucumberTest.CucumberRunner" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="ALSD2016-Test.classpath"/>
        </junit>
        <fail message="Cucumber failed">
           <condition>
               <not>
                   <equals arg1="${cucumber.exitstatus}" arg2="0"/>
               </not>
           </condition>
       </fail>
    </target>
    <target name="Main">
        <java classname="ALSD.CucumberTest.Main" failonerror="true" fork="yes">
            <classpath refid="ALSD2016-Test.classpath"/>
        </java>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
